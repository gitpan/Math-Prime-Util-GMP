
- ECM
  See "An Implementation of the Elliptic Curve Integer Factorization Method"
  by Bosma and AK Lenstra
  Also http://www.ne.lpfritz.org/ftp/Prime/

- prime_count - needs the pc(#) option as well as pc(#,#)

- nth_prime

- We should have a native-int factoring module that works on any native-size
  composites.  Given that we'll already have done trial division, I'm thinking
  perhaps a good SQUFOF.

- GMP SQUFOF could use a better implementation, though low priority since it
  just isn't going to be the right algorithm for numbers > 2^64.  Mainly what
  it needs is to pay attention to the rounds argument.  Perhaps race.

- We need init and destroy routines.  Then we can sieve for next_small_prime.

- ECM should add a stage 2.

- Add a small_prime iterator using a segment sieve.  The next_prime method
  using trial division is super slow, but the non-segmented sieve is too much
  memory once past 100M or so.  Running p-1 with a B2 of 100B will wipe out
  many workstations.

- Add AKS, just to have a working example.
